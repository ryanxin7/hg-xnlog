<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Docker - 标签 - Ryan&#39;s Notebook</title>
    <link>https://hg-xnlog.github.io/tags/docker/</link>
    <description>Docker - 标签 - Ryan&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>99929x@gmail.com (Ryan)</managingEditor>
      <webMaster>99929x@gmail.com (Ryan)</webMaster><lastBuildDate>Mon, 08 Jan 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://hg-xnlog.github.io/tags/docker/" rel="self" type="application/rss+xml" /><item>
  <title>kubernetes 中的网络实现方式</title>
  <link>https://hg-xnlog.github.io/posts/kubernetes/primary/networking-implementation-in-kubernetes/</link>
  <pubDate>Mon, 08 Jan 2024 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/kubernetes/primary/networking-implementation-in-kubernetes/</guid>
  <description><![CDATA[1.kubernetes 网络通信方案简介 Kubernetes 的网络涉及到各种 Pod 之间的通信以及 Pod 与外部网络的连接。而 Kubernetes 的网络实现通常依赖于第三方网络插件，这些插件需要遵循一定的规范，]]></description>
</item>
<item>
  <title>Docker CE 软件仓库在线安装方式</title>
  <link>https://hg-xnlog.github.io/posts/docker/dockerce%E5%9C%A8%E7%BA%BF%E5%AE%89%E8%A3%85/</link>
  <pubDate>Mon, 25 Dec 2023 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/docker/dockerce%E5%9C%A8%E7%BA%BF%E5%AE%89%E8%A3%85/</guid>
  <description><![CDATA[1.环境准备 如果你过去安装过 docker，先删掉： for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do apt-get remove $pkg; done安装依赖： apt-get update apt-get install ca-certificates curl gnupg2.添加仓库镜像源 信任 Docker]]></description>
</item>
<item>
  <title>docker 构建JDK17 镜像</title>
  <link>https://hg-xnlog.github.io/posts/docker/%E6%9E%84%E5%BB%BAjdk17%E9%95%9C%E5%83%8F/</link>
  <pubDate>Fri, 01 Dec 2023 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/docker/%E6%9E%84%E5%BB%BAjdk17%E9%95%9C%E5%83%8F/</guid>
  <description><![CDATA[构建JDK17 镜像 1.下载JDK17程序包 2.准备JDK17 Dockerfile FROM ubuntu:latest MAINTAINER xinn.cc WORKDIR /usr/local/java17 ADD ./jdk-17.0.9_linux-x64.tar.gz /usr/local/java17/ ENV JAVA_HOME=/usr/local/java17/jdk-17.0.9 ENV CLASSPATH=.:$JAVA_HOME/lib/jrt-fs.jar ENV PATH=$PATH:$JAVA_HOME/bin3. 构建脚本 #!/bin/bash TAG=$1 docker build -t harbor.ceamg.com/baseimages/jdk17_0.9:${TAG} . docker push harbor.ceam]]></description>
</item>
<item>
  <title>docker 批量删除  Exited  状态的容器</title>
  <link>https://hg-xnlog.github.io/posts/docker/docker-%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4-exited-%E7%8A%B6%E6%80%81%E7%9A%84%E5%AE%B9%E5%99%A8/</link>
  <pubDate>Fri, 01 Dec 2023 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/docker/docker-%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4-exited-%E7%8A%B6%E6%80%81%E7%9A%84%E5%AE%B9%E5%99%A8/</guid>
  <description><![CDATA[docker 批量删除 Exited 状态的容器 docker rm $(docker ps -a -q -f status=exited)这个命令会列出所有处于 Exited 状态的容器，并将其删除。 docker ps -a：列出所有的容器，包]]></description>
</item>
<item>
  <title>docker 制作 tomcat 基础镜像</title>
  <link>https://hg-xnlog.github.io/posts/docker/tomcat%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/</link>
  <pubDate>Fri, 01 Dec 2023 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/docker/tomcat%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/</guid>
  <description><![CDATA[tomcat 基础镜像 # Use a base image with Java 17 and Tomcat FROM adoptopenjdk:17-jdk-hotspot # Tomcat version to be installed ENV TOMCAT_VERSION 10.1.16 COPY ./apache-tomcat-10.1.16.tar.gz /tmp/ # 在容器中解压缩Tomcat文件 RUN tar -xf /tmp/apache-tomcat-${TOMCAT_VERSION}.tar.gz -C /opt/ &amp;&amp; \ mv /opt/apache-tomcat-${TOMCAT_VERSION} /opt/tomcat &amp;&amp; \ rm apache-tomcat-${TOMCAT_VERSION}.tar.gz # Set environment variables ENV CATALINA_HOME /opt/tomcat ENV PATH $CATALINA_HOME/bin:$PATH]]></description>
</item>
<item>
  <title>使用Github Action 构建Docker镜像并上传Registry</title>
  <link>https://hg-xnlog.github.io/posts/blog/push-docker-images-github-registry/</link>
  <pubDate>Fri, 25 Aug 2023 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/blog/push-docker-images-github-registry/</guid>
  <description><![CDATA[使用 GitHub Actions 来自动构建 Docker 镜像并将其上传到 Docker Registry 时，需要以下步骤进行设置： 工作流会在每次将代码推送到 main 分支时执行。它首先检出代码，然后设置 Docker Buildx 环境，]]></description>
</item>
<item>
  <title>Docker 二进制方式安装</title>
  <link>https://hg-xnlog.github.io/posts/docker/docker%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85/</link>
  <pubDate>Sat, 04 Feb 2023 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/docker/docker%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85/</guid>
  <description><![CDATA[1.下载Docker二进制包 Docker 下载地址： https://download.docker.com/win/static/stable/x86_64/ https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/ Docker-compos 下载地址： https://github.com/docker/compose/releases https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64 2.安装Docker tar xvf docker-24.0.5.zip cp docker/* /usr/bin cp containerd.service /lib/systemd/system/containerd.service cp docker.service /lib/systemd/system/docker.service cp docker.socket /lib/systemd/system/docker.socket cp docker-compose-Linux-x86_64_2.20.3 /usr/bin/docker-compose groupadd docker &amp;&amp; useradd docker -g docker systemctl enable containerd.service &amp;&amp; systemctl]]></description>
</item>
</channel>
</rss>
