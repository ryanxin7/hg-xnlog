<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Zookeeper - 标签 - Ryan&#39;s Notebook</title>
    <link>https://hg-xnlog.github.io/tags/zookeeper/</link>
    <description>Zookeeper - 标签 - Ryan&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>99929x@gmail.com (Ryan)</managingEditor>
      <webMaster>99929x@gmail.com (Ryan)</webMaster><lastBuildDate>Sat, 04 Dec 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://hg-xnlog.github.io/tags/zookeeper/" rel="self" type="application/rss+xml" /><item>
  <title>Kafka 集群实战与原理分析线上问题优化</title>
  <link>https://hg-xnlog.github.io/posts/zookeeper/kafka01/</link>
  <pubDate>Sat, 04 Dec 2021 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/zookeeper/kafka01/</guid>
  <description><![CDATA[Kafka 集群实战与原理分析线上问题优化 一、为什么使用消息队列? 1.Kafka知识点思维导图 以电商为业务背景 消息队列解决的具体问题是什么？ &ndash; 通信问题]]></description>
</item>
<item>
  <title>zookeeper 企业面试真题（面试重点）</title>
  <link>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-05/</link>
  <pubDate>Sat, 09 Oct 2021 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-05/</guid>
  <description><![CDATA[企业面试真题（面试重点） 选举机制 半数机制，超过半数的投票通过，即通过。 （1）第一次启动选举规则： 投票过半数时，服务器 id 大的胜出 （2）第二次启]]></description>
</item>
<item>
  <title>zookeeper 分布式锁案例 （四）</title>
  <link>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-04/</link>
  <pubDate>Fri, 08 Oct 2021 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-04/</guid>
  <description><![CDATA[ZooKeeper 分布式锁案例 什么叫做分布式锁呢？ 比如说&quot;进程 1&quot;在使用该资源的时候，会先去获得锁，&ldquo;进程 1&quot;获得]]></description>
</item>
<item>
  <title>zookeeper 服务器动态上下线监听案例 （三）</title>
  <link>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-03/</link>
  <pubDate>Thu, 07 Oct 2021 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-03/</guid>
  <description><![CDATA[服务器动态上下线监听案例 某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。 代码实现 服务端代]]></description>
</item>
<item>
  <title>zookeeper 集群部署 （二）</title>
  <link>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-02/</link>
  <pubDate>Wed, 06 Oct 2021 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-02/</guid>
  <description><![CDATA[集群部署 Zookeeper为了更好的实现生产的业务场景，一般都会采用分布式的集群架构。集群通常由2n+1台Server节点组成，每个Serv]]></description>
</item>
<item>
  <title>zookeeper 基础与安装 （一）</title>
  <link>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-01/</link>
  <pubDate>Tue, 05 Oct 2021 00:00:00 &#43;0000</pubDate>
  <author>Ryan</author>
  <guid>https://hg-xnlog.github.io/posts/zookeeper/zookeeper-01/</guid>
  <description><![CDATA[ZooKeeper 基础与安装 基础知识 开发框架 ORM - 一台主机承载所有的业务应用 MVC - 多台主机分别承载业务应用的不同功能，通过简单的网络通信实现业务的正常访问 RPC - 应]]></description>
</item>
</channel>
</rss>
